/**
** Remove the unit of a length
** @param {Number} $number - Number to remove unit from
** @return {Number} - Unitless number
** @source https://css-tricks.com/snippets/sass/strip-unit-function/
**/
@function strip-unit($number) {
    @if type-of($number) == 'number' and not unitless($number) {
      @return $number / ($number * 0 + 1);
    }
    @return $number;
  }

@mixin media-breakpoint-up($size) {
    @media (min-width: $size) {
      @content;
    }
}
  
@mixin media-breakpoint-down($size) {
    @media (max-width: $size - 1) {
        @content;
    }
}

@mixin media-breakpoint-between($small, $large) {
    @media (min-width: $small) and (max-width: $large) {
        @content;
    }
}
  
@mixin media-breakpoint-only($size) {
    $intSize: strip-unit($size);
  
    @if ($intSize >= strip-unit($screen-xs-min) and $intSize < strip-unit($screen-sm-min)) {
        @include media-breakpoint-between($screen-xs-min, $screen-xs-max);
    }
  
    @else if ($intSize >= strip-unit($screen-sm-min) and $intSize < strip-unit($screen-md-min)) {
        @include media-breakpoint-between($screen-sm-min, $screen-sm-max);
    }
    
    @else if ($intSize >= strip-unit($screen-md-min) and $intSize < strip-unit($screen-lg-min)) {
        @include media-breakpoint-between($screen-md-min, $screen-md-max);
    }

    @else if($intSize >= strip-unit($screen-lg-min)) {
      @media (min-width: $size) {
        @content;
      }
    }

    @else {
      @media (max-width: $size) {
        @content;
      }
    }
}
